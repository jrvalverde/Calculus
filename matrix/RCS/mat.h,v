head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	2004.02.11.16.29.29;	author jr;	state Exp;
branches;
next	;


desc
@Definitions for module mat.c (matricial calculus) [j]
@


1.1
log
@Initial revision
@
text
@/*
* * * * * * * * * * * * * * * * * * * * * * * * *
*						*
*		    MAT.H			*
*   Include file with the definitions needed	*
*   to use the functions of MAT.C		*
*						*
* * * * * * * * * * * * * * * * * * * * * * * * *
*/

typedef double real;

typedef struct matrix {
    int rows;	    /**< number of rows */
    int cols;	    /**< number of columns */
    real **values;  /**< matrix values arranged as an array of real vectors */
} *matrix;

#define MAT_NOMEMORY	(-1)	/**< ERROR: not enough memory */
#define MAT_BOUNDSCHECK	(-2)	/**< ERROR: during bounds checking */
#define MAT_SINGULAR  	(-3)	/**< ERROR: matrix is singular */
#define MAT_NOTSQUARE	(-3)	/**< ERROR: not a square marix */

extern status mat_alloc(matrix *pmat, int rows, int cols);
extern status mat_free(matrix mat);
extern int mat_rows(matrix mat);
extern int mat_cols(matrix mat);
extern real **mat_values(matrix mat);
extern real *mat_row(matrix mat, int row_number);
extern real mat_element(matrix mat, int row, int col);
extern status mat_set(matrix mat, int row, int col, real value);
extern status mat_init(matrix mat, real value);
extern status mat_identity(matrix mat);
extern status mat_assign(matrix dest, matrix orig);
extern status mat_transpose(matrix trn, matrix mat);
extern status mat_sum(matrix result, matrix mat1, matrix mat2);
extern status mat_substract(matrix result, matrix mat1, matrix mat2);
extern status mat_multiply(matrix prod, matrix fact1, matrix fact2);
extern status mat_scalar_product(matrix scprod, matrix mat, real lambda);
extern boolean mat_is_square(matrix mat);
extern boolean mat_is_symmetric(matrix mat);
extern boolean mat_is_identity(matrix mat);
extern boolean mat_is_null(matrix mat) ;
extern status mat_invert(matrix B, matrix C);


/*
* * * * * * * * * * * * * * * * * * * * * * *
*					    *
*		FIN DE MATRIZ.H		    *
*					    *
* * * * * * * * * * * * * * * * * * * * * * *
*/
@
